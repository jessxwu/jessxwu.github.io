---

---

<button id="theme-toggle" class="w-8 h-8 flex items-center justify-center" aria-label="Change color scheme">
    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20" fill="currentColor" class="transform transition-transform duration-500">
        <!-- Sun icon -->
        <path
            class="sun"
            fill-rule="evenodd"
            d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z"
            clip-rule="evenodd"></path>
        <!-- Moon icon -->
        <path class="moon" fill-rule="evenodd" d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z" clip-rule="evenodd"></path>
    </svg>
</button>

<style>
    #theme-toggle:hover {
        animation: spin 0.5s ease-in-out;
    }
    @keyframes spin {
        from {
            transform: rotate(0deg);
        }
        to {
            transform: rotate(360deg);
        }
    }
    .sun {
        display: none;
    }
    .moon {
        display: block;
    }
    :global(.dark) .sun {
        display: block;
    }
    :global(.dark) .moon {
        display: none;
    }
</style>

<script>
    function setThemeToggleIcon(theme: string) {
        const sunPath = document.querySelector('.sun') as SVGPathElement;
        const moonPath = document.querySelector('.moon') as SVGPathElement;
        if (theme === 'dark') {
            sunPath.style.display = 'block';
            moonPath.style.display = 'none';
        } else {
            sunPath.style.display = 'none';
            moonPath.style.display = 'block';
        }
    }

    function setImageSource(theme: string) {
        const signatureImage = document.getElementById('signature-image') as HTMLImageElement;
        if (signatureImage) {
            signatureImage.src = theme === 'dark' ? '/signature-white.png' : '/signature-black.png';
        }
    }

    function initializeTheme() {
        const getInitialTheme = () => {
            if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
                return localStorage.getItem('theme') || 'light';
            }
            if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
                return 'dark';
            }
            return 'light';
        };

        const theme = getInitialTheme();

        if (theme === 'light') {
            document.documentElement.classList.remove('dark');
        } else {
            document.documentElement.classList.add('dark');
        }

        window.localStorage.setItem('theme', theme);
        setImageSource(theme);
        setThemeToggleIcon(theme);

        const handleToggleClick = () => {
            const element = document.documentElement;
            element.classList.toggle('dark');

            const isDark = element.classList.contains('dark');
            const newTheme = isDark ? 'dark' : 'light';
            localStorage.setItem('theme', newTheme);
            setImageSource(newTheme);
            setThemeToggleIcon(newTheme);
        };

        document.getElementById('theme-toggle')?.addEventListener('click', handleToggleClick);
    }

    document.addEventListener('astro:page-load', initializeTheme);

    document.addEventListener('astro:after-swap', () => {
        const theme = localStorage.theme === 'dark' ? 'dark' : 'light';
        document.documentElement.classList.toggle('dark', theme === 'dark');
        setImageSource(theme);
        setThemeToggleIcon(theme);
    });
</script>
